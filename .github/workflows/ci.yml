name: CI
on:
  - push
  - pull_request
  - create
jobs:

  tutorials:
    name: Tutorials ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }} - ${{ matrix.test_set.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
        test_set:
          - name: Basics
            files: "poisson.jl elasticity.jl lagrange_multipliers.jl dg_discretization.jl darcy.jl stokes.jl advection_diffusion.jl"
          - name: Nonlinear
            files: "p_laplacian.jl hyperelasticity.jl inc_navier_stokes.jl"
          - name: Applications
            files: "fsi_tutorial.jl emscatter.jl isotropic_damage.jl TopOptEMFocus.jl"
          - name: Transient
            files: "isotropic_damage.jl  transient_linear.jl transient_nonlinear.jl "
          - name: Hybrid
            files: "poisson_hdg.jl poisson_hho.jl"
          - name: Plugins
            files: "stokes_blocks.jl poisson_amr.jl poisson_unfitted.jl"
          - name: Other
            files: "validation.jl validation_DrWatson.jl interpolation_fe.jl poisson_dev_fe.jl geometry_dev.jl"
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - run: | 
          cd test/
          julia --project=.. --color=yes --check-bounds=yes runtests.jl ${{ matrix.test_set.files }}
  tutorials_mpi:
    name: Tutorials MPI ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - run: | 
          cd test/
          julia --project=.. --color=yes --check-bounds=yes runtests_mpi.jl
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
            Pkg.build()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
